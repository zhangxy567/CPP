#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>

#include <iostream>
using namespace std;


//C++数据类型:
//(1) 数字类型    :  直接书写数字
//(2) 字符类型    :  用半角单引号包括 ,单个字符
//(3) 字符串类型  :  用双引号包含,多个字符串,即使是单个字符多一个数字用双引号包含,仍只理解为字符串,失去数字和字符
// 功能
//
//  输出
// (1)使用std::cout可以输出各种类型数据
// (2)<< 输出操作符可以拼接输出多个输出项
// (3)在输出末尾想要换行,有三种方法,均在句尾分号之前操作,分别为:
//    1.加上    <<std::endl
//    2.加上    <<'\n'
//    3.加上    <<"\n"
// (4)一段多个输出项代码太长,可以在任何一个<<前加上回车,输出结果一样,但是更美观,但是本质上还是一行
// (5)using namespace std;(第八行位置的代码)用于指定缺省的命名空间,
// 这段代码可以使所有需要写std::的地方(包括std::cout ,std::cin ,还有std::endl)  可以不用再写std::这个前缀
// 而直接写后面的cout cin endl 但是发挥同样功能;
// 
// 
// 和C语言对比:C++的输出可以不再考虑输出的格式使得输出只有print 而不是printf    优点: 对于一般简单输出容易化
// 缺点 :数据同时输出逻辑没有C语言的逻辑严谨,清晰   
// 总结 :C语言像一把手术刀,看病救人需要十分精确,而C++则像现代化医用仪器,几个按钮,不需要太清楚剖析肌理,就可以运行
// 并得出满意结果
// 
// 
//

int main()
{
	//std::cout << 100<<endl;
	//std::cout << 'X' << endl;
	//std::cout << "hello world" << endl;
	

	//用多个数据项输出超女信息，姓名：西施；年龄：25；体重：48.5；性别：X
	std::cout << "姓名: " << "西施" << "; 年龄: " << 25 
		      << "; 体重: " << 48.5 << "; 性别: " << 'X' <<std::endl;
	cout<< "姓名: " << "西施" << "; 年龄: " << 25
		<< "; 体重: " << 48.5 << "; 性别: " << 'X' << endl;
	return 0;
}